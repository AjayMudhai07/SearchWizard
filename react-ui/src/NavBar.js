import './App.css';
import React, { Component } from 'react';
import Dashboard from './Dashboard';

class NavBar extends Component {
  state = {
      showDataSources: false,
      expandedDataSource: null
  }


  dataSources = {
      'DataSource1': ['Revenue Monitring Board', 'Churn Monitoring Board', 'Option3', 'Option-4'],
      'DataSource2': ['OptionA', 'OptionB', 'OptionC'],
      // ... Add more datasources as needed
  }

  toggleDataSources = () => {
      this.setState(prevState => ({
          showDataSources: !prevState.showDataSources,
          expandedDataSource: null
      }));
  }

  toggleDataSourceOptions = (dataSourceName) => {
      if (this.state.expandedDataSource === dataSourceName) {
          this.setState({ expandedDataSource: null });
      } else {
          this.setState({ expandedDataSource: dataSourceName });
      }
  }
    render() {
        return (
          <>
          {/* <Dashboard optionName= {this.state.selectedOption }/> */}
            <div className="left-nav">
                <div className="nav-item">
                    <svg xmlns="http://www.w3.org/2000/svg" className="logo">
                        <path d="M0 18.5138V0.459889H4.90798V18.5138H0Z" fill="#446CFF"/>
                        <path d="M27.3312 4.54633C27.1989 4.50254 27.0049 4.4456 26.7491 4.37552C26.5022 4.29668 26.2112 4.22222 25.876 4.15214C25.5409 4.07331 25.1705 4.00761 24.7648 3.95505C24.3679 3.90249 23.9578 3.87621 23.5345 3.87621C22.6525 3.87621 21.8279 3.98571 21.0607 4.2047C20.3022 4.41494 19.5922 4.69963 18.9308 5.05878C18.2693 5.40917 17.652 5.81213 17.0787 6.26763C16.5143 6.71438 15.9939 7.17427 15.5177 7.6473V18.5138H10.6097V0.459889H15.5177V3.39004C16.1086 2.95205 16.7127 2.53158 17.3301 2.12863C17.9562 1.71692 18.6045 1.35339 19.2747 1.03804C19.9538 0.722683 20.6682 0.473029 21.4178 0.289073C22.1675 0.0963578 22.9612 0 23.7991 0C24.1166 0 24.4385 0.0175196 24.7648 0.0525588C25.0999 0.0788382 25.4218 0.113877 25.7305 0.157676C26.048 0.201475 26.3435 0.249654 26.6169 0.302213C26.8903 0.354772 27.1284 0.407331 27.3312 0.459889V4.54633Z" fill="#446CFF"/>
                        <path d="M45.8651 18.5138V16.74C45.239 17.0816 44.5643 17.3838 43.8411 17.6466C43.1267 17.9094 42.3815 18.1328 41.6054 18.3167C40.8293 18.5007 40.0267 18.6365 39.1977 18.7241C38.3775 18.8204 37.5485 18.8686 36.7106 18.8686C35.7317 18.8686 34.7836 18.7766 33.8664 18.5927C32.958 18.4087 32.151 18.1109 31.4455 17.6992C30.7399 17.2875 30.1711 16.7487 29.7389 16.083C29.3156 15.4172 29.1039 14.6026 29.1039 13.639C29.1039 12.4214 29.4391 11.4096 30.1093 10.6037C30.7796 9.78907 31.8026 9.12333 33.1785 8.6065C34.5543 8.08967 36.2917 7.6911 38.3907 7.41079C40.4985 7.13048 42.99 6.91148 45.8651 6.7538V6.37275C45.8651 6.07492 45.7858 5.78147 45.627 5.49239C45.4683 5.19456 45.1772 4.93615 44.7539 4.71715C44.3394 4.4894 43.7661 4.30544 43.0341 4.16528C42.3109 4.02513 41.3849 3.95505 40.256 3.95505C39.3653 3.95505 38.4833 4.00323 37.6102 4.09959C36.7459 4.18718 35.9081 4.30982 35.0967 4.4675C34.2941 4.62517 33.5312 4.80913 32.8081 5.01936C32.0849 5.2296 31.4278 5.44859 30.8369 5.67635V1.34025C31.4543 1.18257 32.1466 1.02928 32.9139 0.88036C33.6812 0.731443 34.4793 0.604426 35.3083 0.499308C36.1374 0.385431 36.9752 0.297833 37.8219 0.236515C38.6685 0.166436 39.4799 0.131397 40.256 0.131397C41.7818 0.131397 43.1885 0.258414 44.4761 0.512448C45.7637 0.757722 46.8705 1.14315 47.7966 1.66874C48.7314 2.19433 49.459 2.86007 49.9794 3.66598C50.5085 4.47188 50.7731 5.43107 50.7731 6.54357V18.5138H45.8651ZM45.8651 10.2752C43.9778 10.3453 42.3727 10.4461 41.0498 10.5775C39.7357 10.7089 38.6421 10.8621 37.769 11.0373C36.8958 11.2125 36.2079 11.4009 35.7052 11.6024C35.2113 11.8038 34.8409 12.0097 34.594 12.2199C34.347 12.4302 34.1927 12.6404 34.131 12.8506C34.078 13.0609 34.0516 13.2536 34.0516 13.4288C34.0516 13.639 34.1089 13.8449 34.2236 14.0463C34.3382 14.2391 34.5367 14.4099 34.8189 14.5588C35.1099 14.7077 35.4936 14.826 35.9698 14.9136C36.446 15.0012 37.0458 15.045 37.769 15.045C38.5715 15.045 39.3564 14.9836 40.1237 14.861C40.891 14.7384 41.6186 14.5719 42.3065 14.3617C42.9944 14.1427 43.6382 13.8887 44.238 13.5996C44.8465 13.3018 45.3889 12.9864 45.8651 12.6535V10.2752Z" fill="#446CFF"/>
                        <path d="M61.2902 0.459889V2.44398C61.7224 2.17243 62.1898 1.89212 62.6925 1.60304C63.204 1.31397 63.7552 1.05118 64.3461 0.814661C64.9458 0.578147 65.5852 0.385431 66.2643 0.236515C66.9522 0.0788382 67.6931 0 68.4868 0C69.2629 0 69.942 0.0832181 70.5241 0.249654C71.1062 0.407331 71.6089 0.617566 72.0322 0.88036C72.4643 1.13439 72.8304 1.42347 73.1302 1.74758C73.4301 2.06293 73.6902 2.37828 73.9107 2.69364C74.5369 2.29069 75.1543 1.92278 75.7628 1.5899C76.3713 1.25703 76.9843 0.972337 77.6016 0.735823C78.219 0.499308 78.8496 0.319733 79.4934 0.197095C80.1372 0.0656985 80.8075 0 81.5042 0C82.6154 0 83.6076 0.153296 84.4807 0.459889C85.3627 0.766482 86.1079 1.18695 86.7165 1.7213C87.325 2.25565 87.788 2.88635 88.1055 3.61342C88.4318 4.33172 88.595 5.10258 88.595 5.926V18.5138H83.687V6.62241C83.687 6.14062 83.612 5.72453 83.4621 5.37414C83.3122 5.02374 83.1093 4.73905 82.8536 4.52006C82.6066 4.30106 82.3112 4.139 81.9672 4.03389C81.6321 3.92877 81.2749 3.87621 80.8957 3.87621C79.1318 3.87621 77.121 4.66459 74.8632 6.24136C74.8897 6.39027 74.9073 6.56547 74.9161 6.76694C74.9338 6.96842 74.9426 7.16989 74.9426 7.37137V18.5138H70.0346V6.51729C70.0346 6.0355 69.9596 5.62817 69.8097 5.2953C69.6598 4.95367 69.4525 4.67773 69.188 4.4675C68.9322 4.25726 68.6323 4.10835 68.2884 4.02075C67.9532 3.92439 67.5961 3.87621 67.2168 3.87621C66.7582 3.87621 66.2732 3.94191 65.7616 4.07331C65.2589 4.2047 64.7474 4.38866 64.2271 4.62517C63.7155 4.86169 63.2084 5.142 62.7057 5.46611C62.2118 5.79023 61.74 6.14062 61.2902 6.51729V18.5138H56.3822V0.459889H61.2902Z" fill="#446CFF"/>
                        <path d="M114.484 17.6203C112.994 18.1109 111.503 18.4613 110.013 18.6715C108.531 18.8905 107.014 19 105.462 19C103.478 19 101.709 18.7898 100.157 18.3693C98.6138 17.9401 97.3129 17.3225 96.2546 16.5166C95.1963 15.7107 94.3893 14.7252 93.8337 13.5602C93.2781 12.3951 93.0003 11.0768 93.0003 9.60512C93.0003 8.23859 93.2781 6.9728 93.8337 5.80775C94.3981 4.63393 95.1919 3.6178 96.2149 2.75934C97.2468 1.89212 98.4903 1.21761 99.9455 0.735823C101.401 0.245274 103.023 0 104.814 0C106.463 0 107.971 0.223375 109.338 0.670124C110.714 1.10811 111.891 1.76072 112.87 2.62794C113.858 3.49516 114.621 4.56385 115.159 5.83402C115.706 7.1042 115.979 8.56708 115.979 10.2227V11.4315H98.067C98.2257 12.0009 98.4859 12.5221 98.8475 12.9952C99.2179 13.4682 99.7162 13.8711 100.342 14.204C100.969 14.5369 101.736 14.7953 102.644 14.9793C103.561 15.1632 104.655 15.2552 105.925 15.2552C106.825 15.2552 107.707 15.2026 108.571 15.0975C109.435 14.9836 110.242 14.8391 110.992 14.6639C111.741 14.4799 112.416 14.2785 113.016 14.0595C113.624 13.8405 114.114 13.6215 114.484 13.4025V17.6203ZM111.098 7.85754C111.053 7.41079 110.917 6.9509 110.688 6.47787C110.467 5.99608 110.114 5.56247 109.629 5.17704C109.144 4.79161 108.509 4.47626 107.724 4.23098C106.939 3.97695 105.96 3.84993 104.787 3.84993C103.685 3.84993 102.732 3.98571 101.93 4.25726C101.127 4.52882 100.453 4.86607 99.9058 5.26902C99.3678 5.67197 98.9489 6.10558 98.6491 6.56985C98.3492 7.03412 98.1552 7.46335 98.067 7.85754H111.098Z" fill="#446CFF"/>
                        <path d="M118.942 18.5138V13.7835H123.956V18.5138H118.942Z" fill="#446CFF"/>
                        <path d="M143.575 18.5138V16.74C142.949 17.0816 142.274 17.3838 141.551 17.6466C140.837 17.9094 140.091 18.1328 139.315 18.3167C138.539 18.5007 137.736 18.6365 136.907 18.7241C136.087 18.8204 135.258 18.8686 134.42 18.8686C133.441 18.8686 132.493 18.7766 131.576 18.5927C130.668 18.4087 129.861 18.1109 129.155 17.6992C128.45 17.2875 127.881 16.7487 127.449 16.083C127.025 15.4172 126.814 14.6026 126.814 13.639C126.814 12.4214 127.149 11.4096 127.819 10.6037C128.489 9.78907 129.512 9.12333 130.888 8.6065C132.264 8.08967 134.001 7.6911 136.101 7.41079C138.208 7.13048 140.7 6.91148 143.575 6.7538V6.37275C143.575 6.07492 143.496 5.78147 143.337 5.49239C143.178 5.19456 142.887 4.93615 142.464 4.71715C142.049 4.4894 141.476 4.30544 140.744 4.16528C140.021 4.02513 139.095 3.95505 137.966 3.95505C137.075 3.95505 136.193 4.00323 135.32 4.09959C134.456 4.18718 133.618 4.30982 132.806 4.4675C132.004 4.62517 131.241 4.80913 130.518 5.01936C129.795 5.2296 129.138 5.44859 128.547 5.67635V1.34025C129.164 1.18257 129.856 1.02928 130.624 0.88036C131.391 0.731443 132.189 0.604426 133.018 0.499308C133.847 0.385431 134.685 0.297833 135.532 0.236515C136.378 0.166436 137.19 0.131397 137.966 0.131397C139.492 0.131397 140.898 0.258414 142.186 0.512448C143.473 0.757722 144.58 1.14315 145.506 1.66874C146.441 2.19433 147.169 2.86007 147.689 3.66598C148.218 4.47188 148.483 5.43107 148.483 6.54357V18.5138H143.575ZM143.575 10.2752C141.688 10.3453 140.082 10.4461 138.76 10.5775C137.445 10.7089 136.352 10.8621 135.479 11.0373C134.606 11.2125 133.918 11.4009 133.415 11.6024C132.921 11.8038 132.551 12.0097 132.304 12.2199C132.057 12.4302 131.902 12.6404 131.841 12.8506C131.788 13.0609 131.761 13.2536 131.761 13.4288C131.761 13.639 131.819 13.8449 131.933 14.0463C132.048 14.2391 132.246 14.4099 132.529 14.5588C132.82 14.7077 133.203 14.826 133.68 14.9136C134.156 15.0012 134.756 15.045 135.479 15.045C136.281 15.045 137.066 14.9836 137.834 14.861C138.601 14.7384 139.328 14.5719 140.016 14.3617C140.704 14.1427 141.348 13.8887 141.948 13.5996C142.556 13.3018 143.099 12.9864 143.575 12.6535V10.2752Z" fill="#446CFF"/>
                        <path d="M154.092 18.5138V0.459889H159V18.5138H154.092Z" fill="#446CFF"/>
                    </svg>
                    <a className="no-padding" href="/">
                        <button className="nav-item-button">
                            <img src="/icon_1.png" alt="Icon 1" />
                            New Query
                        </button>
                    </a>
                    
                    <button className="dashboard-btn" onClick={this.toggleDataSources}><img src="/icon_2.png" alt="Icon 2" />Dashboard</button>

                    {this.state.showDataSources && (
                        <div className="datasources">
                            {Object.keys(this.dataSources).map(ds => (
                                <div key={ds}>
                                    <button className={`datasource-btn ${this.state.expandedDataSource === ds ? 'selected' : ''}`}  onClick={() => this.toggleDataSourceOptions(ds)}>{ds}</button>
                                    
                                    {this.state.expandedDataSource === ds && (
                                        <div className="options">
                                        {this.dataSources[ds].map(opt => (
                                            <button 
                                                key={opt} 
                                                className={`option ${this.state.selectedOption === opt ? 'option-selected' : ''}`} 
                                                onClick={() => this.setState({ selectedOption: opt })}
                                            >
                                                {opt}
                                            </button>
                                        ))}
                                    </div>
                                    
                                    )}
                                </div>
                            ))}
                        </div>
                    )}

                </div>
            </div>
            </>
        );
    }
}


export default NavBar;


